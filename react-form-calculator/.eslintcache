[{"C:\\Users\\Danieli\\Desktop\\Calculator1\\react-form-calculator\\src\\index.js":"1","C:\\Users\\Danieli\\Desktop\\Calculator1\\react-form-calculator\\src\\App.js":"2","C:\\Users\\Danieli\\Desktop\\Calculator1\\react-form-calculator\\src\\reportWebVitals.js":"3"},{"size":1882,"mtime":1614447201824,"results":"4","hashOfConfig":"5"},{"size":1594,"mtime":1612272031190,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1xeb0ps",{"filePath":"11","messages":"12","errorCount":2,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\Danieli\\Desktop\\Calculator1\\react-form-calculator\\src\\index.js",["17","18","19","20"],"import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\n\nfunction App() {\n  \n\n  const [input, setInput] = useState(\"\");\n  const calcBtns = [];\n  [9, 8, 7, 6, 5, 4, 3, 2, 1, 0, \".\"].forEach((item) => {\n    calcBtns.push(\n      <button\n        onClick={(e) => {\n          setInput(input + e.target.value);\n        }}\n        value={item}\n        key={item}\n      >\n        {\" \"}\n        {item}\n      </button>\n    );\n  });\n\n  return (\n    <div className=\"wrapper\">\n      {\" \"}\n      <div className=\"show-input\">{input}</div>\n      <div className=\"digits flex\">{calcBtns}</div>\n      <div className=\"modifiers subgrid\">\n       \n\n        <button onClick={() => setInput(input.substr(0, input.length - 1))}>\n          Clear\n        </button>\n      </div>\n\n      <div className=\"operations subgrid\">\n         \n        <button onClick={(e) => setInput(input + e.target.value)} value=\"+\">\n          +\n        </button>\n\n        \n        <button onClick={(e) => setInput(input + e.target.value)} value=\"-\">     \n          -\n        </button>\n\n        <button onClick={(e) => setInput(input + e.target.value)} value=\"*\">         \n          *\n        </button>\n\n        <button onClick={(e) => setInput(input + e.target.value)} value=\"/\">          \n          /\n        </button>\n        \n        <button\n          onClick={(e) => {\n            try {\n              setInput(\n                String(eval(input)).length > 3 &&\n                  String(eval(input)).includes(\".\")\n                  ? String(eval(input).toFixed(4))\n                  : String(eval(input))\n              );\n            } catch (e) {\n              console.log(e);\n            }\n          }}\n          value=\"=\"\n        >\n          =\n        </button>\n      </div>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n","C:\\Users\\Danieli\\Desktop\\Calculator1\\react-form-calculator\\src\\App.js",["21","22","23","24"],"import React,{useState, useEffect} from 'react';\nimport './App.css';\n\nfunction App() {\n  const [currentSum,setCurrentSum]=useState(0);\n  const [clear,setClear]=useState(false);\n\n  useEffect(()=>{\n    document.querySelector('#result').value=\"\";\n  },[])\n  \n  useEffect(()=>{\n    if(clear)\n    document.querySelector('#result').value=\"\";\n  })\n\n  const Add=(e)=>{\n    e.preventDefault();\n    if(clear) setClear(false);\n    let currentNum=document.querySelector('#num').value\n    if(currentNum=='')\n    return;\n    let sum= currentSum+parseInt(currentNum);\n    setCurrentSum(sum);\n    document.querySelector('#num').value=\"\";\n      \n  }\n\n  const Diff=(e)=>{\n    e.preventDefault();\n    if(clear) setClear(false);\n    let currentNum=document.querySelector('#num').value\n    if(currentNum=='')\n    return;\n    let dif= currentDif-parseInt(currentNum);\n    setCurrentDif(dif);\n    document.querySelector('#num').value=\"\";\n      \n  }\n\n\n  const Clear=(e)=>{\n    e.preventDefault();\n    console.log('sum:', currentSum);\n    document.querySelector('form').reset();\n    setClear(true);\n    setCurrentSum(0);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-title\">\n        <h1> Basic Form Calculator</h1>\n      </div>\n      <form>\n            <input type=\"text\" id=\"num\" placeholder=\"enter a number\" />\n            <input type=\"text\" id=\"result\" value={currentSum}  readOnly />   \n            \n            <button onClick={Add}>+</button>\n            <button onClick={Diff}>-</button>\n            <button onClick={Clear}>Clear</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;",["25","26"],"C:\\Users\\Danieli\\Desktop\\Calculator1\\react-form-calculator\\src\\reportWebVitals.js",[],{"ruleId":"27","severity":1,"message":"28","line":62,"column":24,"nodeType":"29","messageId":"30","endLine":62,"endColumn":28},{"ruleId":"27","severity":1,"message":"28","line":63,"column":26,"nodeType":"29","messageId":"30","endLine":63,"endColumn":30},{"ruleId":"27","severity":1,"message":"28","line":64,"column":28,"nodeType":"29","messageId":"30","endLine":64,"endColumn":32},{"ruleId":"27","severity":1,"message":"28","line":65,"column":28,"nodeType":"29","messageId":"30","endLine":65,"endColumn":32},{"ruleId":"31","severity":1,"message":"32","line":21,"column":18,"nodeType":"33","messageId":"30","endLine":21,"endColumn":20},{"ruleId":"31","severity":1,"message":"32","line":33,"column":18,"nodeType":"33","messageId":"30","endLine":33,"endColumn":20},{"ruleId":"34","severity":2,"message":"35","line":35,"column":14,"nodeType":"36","messageId":"37","endLine":35,"endColumn":24},{"ruleId":"34","severity":2,"message":"38","line":36,"column":5,"nodeType":"36","messageId":"37","endLine":36,"endColumn":18},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},"no-eval","eval can be harmful.","CallExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-undef","'currentDif' is not defined.","Identifier","undef","'setCurrentDif' is not defined.","no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-global-assign","no-unsafe-negation"]